#![cfg(target_arch = "arm")]

use core::arch::arm::{
    float32x2_t, float32x2x2_t, float32x2x3_t, float32x2x4_t, float32x4_t, float32x4x2_t,
    float32x4x3_t, float32x4x4_t, int16x4_t, int16x4x2_t, int16x4x3_t, int16x4x4_t, int16x8_t,
    int16x8x2_t, int16x8x3_t, int16x8x4_t, int32x2_t, int32x2x2_t, int32x2x3_t, int32x2x4_t,
    int32x4_t, int32x4x2_t, int32x4x3_t, int32x4x4_t, int64x1_t, int64x1x2_t, int64x1x3_t,
    int64x1x4_t, int64x2_t, int64x2x2_t, int64x2x3_t, int64x2x4_t, int8x16_t, int8x16x2_t,
    int8x16x3_t, int8x16x4_t, int8x8_t, int8x8x2_t, int8x8x3_t, int8x8x4_t, poly16x4_t,
    poly16x4x2_t, poly16x4x3_t, poly16x4x4_t, poly16x8_t, poly16x8x2_t, poly16x8x3_t, poly16x8x4_t,
    poly64x1_t, poly64x1x2_t, poly64x1x3_t, poly64x1x4_t, poly64x2_t, poly64x2x2_t, poly64x2x3_t,
    poly64x2x4_t, poly8x16_t, poly8x16x2_t, poly8x16x3_t, poly8x16x4_t, poly8x8_t, poly8x8x2_t,
    poly8x8x3_t, poly8x8x4_t, uint16x4_t, uint16x4x2_t, uint16x4x3_t, uint16x4x4_t, uint16x8_t,
    uint16x8x2_t, uint16x8x3_t, uint16x8x4_t, uint32x2_t, uint32x2x2_t, uint32x2x3_t, uint32x2x4_t,
    uint32x4_t, uint32x4x2_t, uint32x4x3_t, uint32x4x4_t, uint64x1_t, uint64x1x2_t, uint64x1x3_t,
    uint64x1x4_t, uint64x2_t, uint64x2x2_t, uint64x2x3_t, uint64x2x4_t, uint8x16_t, uint8x16x2_t,
    uint8x16x3_t, uint8x16x4_t, uint8x8_t, uint8x8x2_t, uint8x8x3_t, uint8x8x4_t,
};

impl_total_size_childless! {
    float32x2_t,
    float32x2x2_t,
    float32x2x3_t,
    float32x2x4_t,
    float32x4_t,
    float32x4x2_t,
    float32x4x3_t,
    float32x4x4_t,
    int8x8_t,
    int8x8x2_t,
    int8x8x3_t,
    int8x8x4_t,
    int8x16_t,
    int8x16x2_t,
    int8x16x3_t,
    int8x16x4_t,
    int16x4_t,
    int16x4x2_t,
    int16x4x3_t,
    int16x4x4_t,
    int16x8_t,
    int16x8x2_t,
    int16x8x3_t,
    int16x8x4_t,
    int32x2_t,
    int32x2x2_t,
    int32x2x3_t,
    int32x2x4_t,
    int32x4_t,
    int32x4x2_t,
    int32x4x3_t,
    int32x4x4_t,
    int64x1_t,
    int64x1x2_t,
    int64x1x3_t,
    int64x1x4_t,
    int64x2_t,
    int64x2x2_t,
    int64x2x3_t,
    int64x2x4_t,
    poly8x8_t,
    poly8x8x2_t,
    poly8x8x3_t,
    poly8x8x4_t,
    poly8x16_t,
    poly8x16x2_t,
    poly8x16x3_t,
    poly8x16x4_t,
    poly16x4_t,
    poly16x4x2_t,
    poly16x4x3_t,
    poly16x4x4_t,
    poly16x8_t,
    poly16x8x2_t,
    poly16x8x3_t,
    poly16x8x4_t,
    poly64x1_t,
    poly64x1x2_t,
    poly64x1x3_t,
    poly64x1x4_t,
    poly64x2_t,
    poly64x2x2_t,
    poly64x2x3_t,
    poly64x2x4_t,
    uint8x8_t,
    uint8x8x2_t,
    uint8x8x3_t,
    uint8x8x4_t,
    uint8x16_t,
    uint8x16x2_t,
    uint8x16x3_t,
    uint8x16x4_t,
    uint16x4_t,
    uint16x4x2_t,
    uint16x4x3_t,
    uint16x4x4_t,
    uint16x8_t,
    uint16x8x2_t,
    uint16x8x3_t,
    uint16x8x4_t,
    uint32x2_t,
    uint32x2x2_t,
    uint32x2x3_t,
    uint32x2x4_t,
    uint32x4_t,
    uint32x4x2_t,
    uint32x4x3_t,
    uint32x4x4_t,
    uint64x1_t,
    uint64x1x2_t,
    uint64x1x3_t,
    uint64x1x4_t,
    uint64x2_t,
    uint64x2x2_t,
    uint64x2x3_t,
    uint64x2x4_t,
}

#[cfg(feature = "stdsimd")]
mod stdsimd {
    use core::arch::arm::{int16x2_t, int8x4_t, uint16x2_t, uint8x4_t, APSR, SY};

    impl_total_size_childless! {
        APSR,
        SY,
        int8x4_t,
        int16x2_t,
        uint8x4_t,
        uint16x2_t,
    }
}
